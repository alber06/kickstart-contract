{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport { Form, Input, Message, Button } from 'semantic-ui-react';\n\nvar ContributeForm = /*#__PURE__*/function (_Component) {\n  _inherits(ContributeForm, _Component);\n\n  var _super = _createSuper(ContributeForm);\n\n  function ContributeForm() {\n    _classCallCheck(this, ContributeForm);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ContributeForm, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(Form, null, __jsx(Form.Field, null, __jsx(\"label\", null, \"Amount to contribute\"), __jsx(Input, {\n        label: \"ether\",\n        labelPosition: \"right\"\n      })), __jsx(Button, {\n        primary: true\n      }, \"Contribute!\"));\n    }\n  }]);\n\n  return ContributeForm;\n}(Component);\n\nexport { ContributeForm as default };","map":{"version":3,"sources":["/Users/albertofernandez/Developer/kickstart/components/ContributeForm.js"],"names":["React","Component","Form","Input","Message","Button","ContributeForm"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,IAAR,EAAcC,KAAd,EAAqBC,OAArB,EAA8BC,MAA9B,QAA2C,mBAA3C;;IAEqBC,c;;;;;;;;;;;;;6BACV;AACP,aACE,MAAC,IAAD,QACE,MAAC,IAAD,CAAM,KAAN,QACE,4CADF,EAEE,MAAC,KAAD;AAAO,QAAA,KAAK,EAAC,OAAb;AAAqB,QAAA,aAAa,EAAC;AAAnC,QAFF,CADF,EAKE,MAAC,MAAD;AAAQ,QAAA,OAAO;AAAf,uBALF,CADF;AASD;;;;EAXyCL,S;;SAAvBK,c","sourcesContent":["import React, {Component} from 'react';\nimport {Form, Input, Message, Button} from 'semantic-ui-react';\n\nexport default class ContributeForm extends Component {\n  render() {\n    return (\n      <Form>\n        <Form.Field>\n          <label>Amount to contribute</label>\n          <Input label=\"ether\" labelPosition=\"right\" />\n        </Form.Field>\n        <Button primary>Contribute!</Button>\n      </Form>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
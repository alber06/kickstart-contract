{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Button, Table } from 'semantic-ui-react';\nimport { Link } from '../../../routes';\nimport { Layout, RequestRow } from '../../../components';\nimport Campaign from '../../../ethereum/campaign';\nexport default class RequestIndex extends Component {\n  static async getInitialProps(props) {\n    const {\n      address\n    } = props.query;\n    const campaign = Campaign(address);\n    const requestCount = await campaign.methods.getRequestCount().call();\n    const approversCount = await campaign.methods.approversCount().call();\n    const requests = await Promise.all(Array(parseInt(requestCount)).fill().map((element, index) => {\n      return campaign.methods.requests(index).call();\n    }));\n    return {\n      address,\n      requests,\n      requestCount,\n      approversCount\n    };\n  }\n\n  renderRows() {\n    return this.props.requests.map((request, index) => {\n      return __jsx(RequestRow, {\n        request: request,\n        key: index,\n        id: index,\n        address: this.props.address\n      });\n    });\n  }\n\n  render() {\n    const {\n      Header,\n      Row,\n      HeaderCell,\n      Body\n    } = Table;\n    return __jsx(Layout, null, __jsx(\"h3\", null, \"Request\"), __jsx(Link, {\n      route: `/campaigns/${this.props.address}/requests/new`\n    }, __jsx(\"a\", null, __jsx(Button, {\n      primary: true\n    }, \"Add Request\"))), __jsx(Table, null, __jsx(Header, null, __jsx(Row, null, __jsx(HeaderCell, null, \"Id\"), __jsx(HeaderCell, null, \"Description\"), __jsx(HeaderCell, null, \"Amount\"), __jsx(HeaderCell, null, \"Recipient\"), __jsx(HeaderCell, null, \"Approval Count\"), __jsx(HeaderCell, null, \"Approve\"), __jsx(HeaderCell, null, \"Finalize\"))), __jsx(Body, null, this.renderRows())));\n  }\n\n}","map":{"version":3,"sources":["/Users/albertofernandez/Developer/kickstart/pages/campaigns/requests/index.js"],"names":["React","Component","Button","Table","Link","Layout","RequestRow","Campaign","RequestIndex","getInitialProps","props","address","query","campaign","requestCount","methods","getRequestCount","call","approversCount","requests","Promise","all","Array","parseInt","fill","map","element","index","renderRows","request","render","Header","Row","HeaderCell","Body"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,MAAR,EAAgBC,KAAhB,QAA4B,mBAA5B;AACA,SAAQC,IAAR,QAAmB,iBAAnB;AACA,SAAQC,MAAR,EAAgBC,UAAhB,QAAiC,qBAAjC;AACA,OAAOC,QAAP,MAAqB,4BAArB;AAEA,eAAe,MAAMC,YAAN,SAA2BP,SAA3B,CAAqC;AAClD,eAAaQ,eAAb,CAA6BC,KAA7B,EAAoC;AAClC,UAAM;AAACC,MAAAA;AAAD,QAAYD,KAAK,CAACE,KAAxB;AACA,UAAMC,QAAQ,GAAGN,QAAQ,CAACI,OAAD,CAAzB;AACA,UAAMG,YAAY,GAAG,MAAMD,QAAQ,CAACE,OAAT,CAAiBC,eAAjB,GAAmCC,IAAnC,EAA3B;AACA,UAAMC,cAAc,GAAG,MAAML,QAAQ,CAACE,OAAT,CAAiBG,cAAjB,GAAkCD,IAAlC,EAA7B;AAEA,UAAME,QAAQ,GAAG,MAAMC,OAAO,CAACC,GAAR,CACrBC,KAAK,CAACC,QAAQ,CAACT,YAAD,CAAT,CAAL,CACGU,IADH,GAEGC,GAFH,CAEO,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACvB,aAAOd,QAAQ,CAACE,OAAT,CAAiBI,QAAjB,CAA0BQ,KAA1B,EAAiCV,IAAjC,EAAP;AACD,KAJH,CADqB,CAAvB;AAQA,WAAO;AAACN,MAAAA,OAAD;AAAUQ,MAAAA,QAAV;AAAoBL,MAAAA,YAApB;AAAkCI,MAAAA;AAAlC,KAAP;AACD;;AAEDU,EAAAA,UAAU,GAAG;AACX,WAAO,KAAKlB,KAAL,CAAWS,QAAX,CAAoBM,GAApB,CAAwB,CAACI,OAAD,EAAUF,KAAV,KAAoB;AACjD,aACE,MAAC,UAAD;AACE,QAAA,OAAO,EAAEE,OADX;AAEE,QAAA,GAAG,EAAEF,KAFP;AAGE,QAAA,EAAE,EAAEA,KAHN;AAIE,QAAA,OAAO,EAAE,KAAKjB,KAAL,CAAWC;AAJtB,QADF;AAQD,KATM,CAAP;AAUD;;AAEDmB,EAAAA,MAAM,GAAG;AACP,UAAM;AAACC,MAAAA,MAAD;AAASC,MAAAA,GAAT;AAAcC,MAAAA,UAAd;AAA0BC,MAAAA;AAA1B,QAAkC/B,KAAxC;AACA,WACE,MAAC,MAAD,QACE,4BADF,EAEE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAG,cAAa,KAAKO,KAAL,CAAWC,OAAQ;AAA9C,OACE,iBACE,MAAC,MAAD;AAAQ,MAAA,OAAO;AAAf,qBADF,CADF,CAFF,EAOE,MAAC,KAAD,QACE,MAAC,MAAD,QACE,MAAC,GAAD,QACE,MAAC,UAAD,aADF,EAEE,MAAC,UAAD,sBAFF,EAGE,MAAC,UAAD,iBAHF,EAIE,MAAC,UAAD,oBAJF,EAKE,MAAC,UAAD,yBALF,EAME,MAAC,UAAD,kBANF,EAOE,MAAC,UAAD,mBAPF,CADF,CADF,EAYE,MAAC,IAAD,QAAO,KAAKiB,UAAL,EAAP,CAZF,CAPF,CADF;AAwBD;;AAzDiD","sourcesContent":["import React, {Component} from 'react';\nimport {Button, Table} from 'semantic-ui-react';\nimport {Link} from '../../../routes';\nimport {Layout, RequestRow} from '../../../components';\nimport Campaign from '../../../ethereum/campaign';\n\nexport default class RequestIndex extends Component {\n  static async getInitialProps(props) {\n    const {address} = props.query;\n    const campaign = Campaign(address);\n    const requestCount = await campaign.methods.getRequestCount().call();\n    const approversCount = await campaign.methods.approversCount().call();\n\n    const requests = await Promise.all(\n      Array(parseInt(requestCount))\n        .fill()\n        .map((element, index) => {\n          return campaign.methods.requests(index).call();\n        })\n    );\n\n    return {address, requests, requestCount, approversCount};\n  }\n\n  renderRows() {\n    return this.props.requests.map((request, index) => {\n      return (\n        <RequestRow\n          request={request}\n          key={index}\n          id={index}\n          address={this.props.address}\n        />\n      );\n    });\n  }\n\n  render() {\n    const {Header, Row, HeaderCell, Body} = Table;\n    return (\n      <Layout>\n        <h3>Request</h3>\n        <Link route={`/campaigns/${this.props.address}/requests/new`}>\n          <a>\n            <Button primary>Add Request</Button>\n          </a>\n        </Link>\n        <Table>\n          <Header>\n            <Row>\n              <HeaderCell>Id</HeaderCell>\n              <HeaderCell>Description</HeaderCell>\n              <HeaderCell>Amount</HeaderCell>\n              <HeaderCell>Recipient</HeaderCell>\n              <HeaderCell>Approval Count</HeaderCell>\n              <HeaderCell>Approve</HeaderCell>\n              <HeaderCell>Finalize</HeaderCell>\n            </Row>\n          </Header>\n          <Body>{this.renderRows()}</Body>\n        </Table>\n      </Layout>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
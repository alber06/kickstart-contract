{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Table, Button } from 'semantic-ui-react';\nimport web3 from '../ethereum/web3';\nimport Campaign from '../ethereum/campaign';\nexport default class RequestRow extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"onApprove\", async () => {\n      const campaign = Campaign(this.props.address);\n      const accounts = await web3.eth.getAccounts();\n      await campaign.methods.approveRequest(this.props.id).send({\n        from: accounts[0]\n      });\n    });\n\n    _defineProperty(this, \"onFinalize\", async () => {\n      const campaign = Campaign(this.props.address);\n      const accounts = await web3.eth.getAccounts();\n      await campaign.methods.finalizeRequest(this.props.id).send({\n        from: accounts[0]\n      });\n    });\n  }\n\n  render() {\n    const {\n      Row,\n      Cell\n    } = Table;\n    const {\n      id,\n      request,\n      approversCount\n    } = this.props;\n    const readyToFinalize = request.approvalCount > approversCount / 2;\n    return __jsx(Row, {\n      disabled: request.complete,\n      positive: readyToFinalize && !request.complete\n    }, __jsx(Cell, null, id), __jsx(Cell, null, request.description), __jsx(Cell, null, web3.utils.fromWei(request.value, 'ether')), __jsx(Cell, null, request.recipient), __jsx(Cell, null, request.approvalCount, \"/\", approversCount), __jsx(Cell, null, request.complete ? null : __jsx(Button, {\n      color: \"green\",\n      basic: true,\n      onClick: this.onApprove\n    }, \"Approve\")), __jsx(Cell, null, request.complete ? null : __jsx(Button, {\n      color: \"teal\",\n      basic: true,\n      onClick: this.onApprove,\n      onClick: this.onFinalize\n    }, \"Finalize\")));\n  }\n\n}","map":{"version":3,"sources":["/Users/albertofernandez/Developer/kickstart/components/RequestRow.js"],"names":["React","Component","Table","Button","web3","Campaign","RequestRow","campaign","props","address","accounts","eth","getAccounts","methods","approveRequest","id","send","from","finalizeRequest","render","Row","Cell","request","approversCount","readyToFinalize","approvalCount","complete","description","utils","fromWei","value","recipient","onApprove","onFinalize"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,KAAR,EAAeC,MAAf,QAA4B,mBAA5B;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AAEA,eAAe,MAAMC,UAAN,SAAyBL,SAAzB,CAAmC;AAAA;AAAA;;AAAA,uCACpC,YAAY;AACtB,YAAMM,QAAQ,GAAGF,QAAQ,CAAC,KAAKG,KAAL,CAAWC,OAAZ,CAAzB;AACA,YAAMC,QAAQ,GAAG,MAAMN,IAAI,CAACO,GAAL,CAASC,WAAT,EAAvB;AAEA,YAAML,QAAQ,CAACM,OAAT,CAAiBC,cAAjB,CAAgC,KAAKN,KAAL,CAAWO,EAA3C,EAA+CC,IAA/C,CAAoD;AACxDC,QAAAA,IAAI,EAAEP,QAAQ,CAAC,CAAD;AAD0C,OAApD,CAAN;AAGD,KAR+C;;AAAA,wCAUnC,YAAY;AACvB,YAAMH,QAAQ,GAAGF,QAAQ,CAAC,KAAKG,KAAL,CAAWC,OAAZ,CAAzB;AACA,YAAMC,QAAQ,GAAG,MAAMN,IAAI,CAACO,GAAL,CAASC,WAAT,EAAvB;AAEA,YAAML,QAAQ,CAACM,OAAT,CAAiBK,eAAjB,CAAiC,KAAKV,KAAL,CAAWO,EAA5C,EAAgDC,IAAhD,CAAqD;AACzDC,QAAAA,IAAI,EAAEP,QAAQ,CAAC,CAAD;AAD2C,OAArD,CAAN;AAGD,KAjB+C;AAAA;;AAmBhDS,EAAAA,MAAM,GAAG;AACP,UAAM;AAACC,MAAAA,GAAD;AAAMC,MAAAA;AAAN,QAAcnB,KAApB;AACA,UAAM;AAACa,MAAAA,EAAD;AAAKO,MAAAA,OAAL;AAAcC,MAAAA;AAAd,QAAgC,KAAKf,KAA3C;AACA,UAAMgB,eAAe,GAAGF,OAAO,CAACG,aAAR,GAAwBF,cAAc,GAAG,CAAjE;AAEA,WACE,MAAC,GAAD;AACE,MAAA,QAAQ,EAAED,OAAO,CAACI,QADpB;AAEE,MAAA,QAAQ,EAAEF,eAAe,IAAI,CAACF,OAAO,CAACI;AAFxC,OAIE,MAAC,IAAD,QAAOX,EAAP,CAJF,EAKE,MAAC,IAAD,QAAOO,OAAO,CAACK,WAAf,CALF,EAME,MAAC,IAAD,QAAOvB,IAAI,CAACwB,KAAL,CAAWC,OAAX,CAAmBP,OAAO,CAACQ,KAA3B,EAAkC,OAAlC,CAAP,CANF,EAOE,MAAC,IAAD,QAAOR,OAAO,CAACS,SAAf,CAPF,EAQE,MAAC,IAAD,QACGT,OAAO,CAACG,aADX,OAC2BF,cAD3B,CARF,EAWE,MAAC,IAAD,QACGD,OAAO,CAACI,QAAR,GAAmB,IAAnB,GACC,MAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,OAAd;AAAsB,MAAA,KAAK,MAA3B;AAA4B,MAAA,OAAO,EAAE,KAAKM;AAA1C,iBAFJ,CAXF,EAkBE,MAAC,IAAD,QACGV,OAAO,CAACI,QAAR,GAAmB,IAAnB,GACC,MAAC,MAAD;AACE,MAAA,KAAK,EAAC,MADR;AAEE,MAAA,KAAK,MAFP;AAGE,MAAA,OAAO,EAAE,KAAKM,SAHhB;AAIE,MAAA,OAAO,EAAE,KAAKC;AAJhB,kBAFJ,CAlBF,CADF;AAiCD;;AAzD+C","sourcesContent":["import React, {Component} from 'react';\nimport {Table, Button} from 'semantic-ui-react';\nimport web3 from '../ethereum/web3';\nimport Campaign from '../ethereum/campaign';\n\nexport default class RequestRow extends Component {\n  onApprove = async () => {\n    const campaign = Campaign(this.props.address);\n    const accounts = await web3.eth.getAccounts();\n\n    await campaign.methods.approveRequest(this.props.id).send({\n      from: accounts[0]\n    });\n  };\n\n  onFinalize = async () => {\n    const campaign = Campaign(this.props.address);\n    const accounts = await web3.eth.getAccounts();\n\n    await campaign.methods.finalizeRequest(this.props.id).send({\n      from: accounts[0]\n    });\n  };\n\n  render() {\n    const {Row, Cell} = Table;\n    const {id, request, approversCount} = this.props;\n    const readyToFinalize = request.approvalCount > approversCount / 2;\n\n    return (\n      <Row\n        disabled={request.complete}\n        positive={readyToFinalize && !request.complete}\n      >\n        <Cell>{id}</Cell>\n        <Cell>{request.description}</Cell>\n        <Cell>{web3.utils.fromWei(request.value, 'ether')}</Cell>\n        <Cell>{request.recipient}</Cell>\n        <Cell>\n          {request.approvalCount}/{approversCount}\n        </Cell>\n        <Cell>\n          {request.complete ? null : (\n            <Button color=\"green\" basic onClick={this.onApprove}>\n              Approve\n            </Button>\n          )}\n        </Cell>\n        <Cell>\n          {request.complete ? null : (\n            <Button\n              color=\"teal\"\n              basic\n              onClick={this.onApprove}\n              onClick={this.onFinalize}\n            >\n              Finalize\n            </Button>\n          )}\n        </Cell>\n      </Row>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}